The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Test for matrix_divided function.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

      >>> add_integer = __import__("2-matrix_divided").matrix_divided

Now use it:

      >>> matrix_divided([[1, 3, 2], [4, -6, 2]], 2)
      [[0.5, 1.5, 1], [2, -3, 1]]
      >> matrix_divided([[5, 9, 3], [2, 4, 8], 0])
      Traceback (most recent call last):
      ...
      ZeroDivisionError: division by zero
      >>> matrix_divided("string", 2)
      Traceback (most recent call last):
      ...
      TypeError: matrix must be a matrix (list of lists) of integers/floats
      >>> matrix_divided(2, "string")
      Traceback (most recent call last):
      ...
      TypeError: matrix must be a matrix (list of lists) of integers/floats
      >>> matrix_divided(None, None)
      Traceback (most recent call last):
      ...
      TypeError: matrix must be a matrix (list of lists) of integers/floats
      >>> matrix_divided([[1, 3, 2], [4, -6, 2]], "string")
      Traceback (most recent call last):
      ...
      TypeError: div must be a number
      >>> matrix_divided([[1, -2, 1], [4]])
      Traceback (most recent call last):
      ...
      TypeError: Each row of the matrix must have the same size
      >>> matrix_divided([[1, -2, 1], "string", 2])
      Traceback (most recent call last):
      ...
      TypeError: Each row of the matrix must have the same size
      >>> matrix_divided([[1], None], 2)
      Traceback (most recent call last):
      ...
      TypeError: matrix must be a matrix (list of lists) of integers/floats
